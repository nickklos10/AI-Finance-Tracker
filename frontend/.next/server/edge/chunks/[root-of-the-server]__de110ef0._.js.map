{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { withMiddlewareAuthRequired } from \"@auth0/nextjs-auth0/edge\";\nimport { NextResponse, type NextRequest } from \"next/server\";\n\n// This function adds handling for unauthenticated users and verifies access tokens\nexport default function middleware(req: NextRequest) {\n  const response = withMiddlewareAuthRequired()(req);\n\n  // Add security headers to all responses\n  if (response instanceof NextResponse) {\n    // Add security headers\n    response.headers.set(\"X-Frame-Options\", \"DENY\");\n    response.headers.set(\"X-Content-Type-Options\", \"nosniff\");\n    response.headers.set(\"Referrer-Policy\", \"strict-origin-when-cross-origin\");\n    response.headers.set(\n      \"Strict-Transport-Security\",\n      \"max-age=31536000; includeSubDomains\"\n    );\n  }\n\n  return response;\n}\n\n// Apply middleware to secured routes\nexport const config = {\n  matcher: [\n    \"/dashboard/:path*\",\n    \"/api/transactions/:path*\",\n    \"/api/categories/:path*\",\n    \"/profile/:path*\",\n  ],\n};\n"],"names":[],"mappings":";;;;;;;;;AACA;AAAA;;;AAGe,SAAS,WAAW,GAAgB;IACjD,MAAM,WAAW,6BAA6B;IAE9C,wCAAwC;IACxC,IAAI,oBAAoB,6LAAA,CAAA,eAAY,EAAE;QACpC,uBAAuB;QACvB,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;QACxC,SAAS,OAAO,CAAC,GAAG,CAAC,0BAA0B;QAC/C,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;QACxC,SAAS,OAAO,CAAC,GAAG,CAClB,6BACA;IAEJ;IAEA,OAAO;AACT;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;KACD;AACH"}}]
}